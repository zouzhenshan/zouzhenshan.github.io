[{"content":"1. 基础输入输出 1.1 cin 和 cout 1 2 3 4 5 6 7 8 9 #include \u0026lt;iostream\u0026gt; using namespace std; int main() { int a; cin \u0026gt;\u0026gt; a; // 输入整数 cout \u0026lt;\u0026lt; a \u0026lt;\u0026lt; \u0026#39;\\n\u0026#39;; // 输出（用 \u0026#39;\\n\u0026#39; 替代 endl 更快） return 0; } [!NOTE] cin \u0026gt;\u0026gt; 会自动跳过空白字符（空格、换行、制表符）。 cin \u0026gt;\u0026gt; s 读取到第一个空白符前的字符串（适合单词分割）。\n1 2 3 4 5 6 7 8 9 10 11 12 13 #include \u0026lt;iostream\u0026gt; using namespace std; int main() { char ch; std::cout \u0026lt;\u0026lt; \u0026#34;请输入一个字符（然后输入回车）: \u0026#34;; std::cin \u0026gt;\u0026gt; ch; // 仅忽略下一个字符（比如换行符） std::cin.ignore(); // 清除输入缓冲区，避免影响后续的 getline() std::cin.ignore(std::numeric_limits\u0026lt;std::streamsize\u0026gt;::max(), \u0026#39;\\n\u0026#39;); return 0; } 1.2 scanf 和 printf 1 2 3 4 5 6 7 8 #include \u0026lt;cstdio\u0026gt; int main() { int a; scanf(\u0026#34;%d\u0026#34;, \u0026amp;a); // 输入整数 printf(\u0026#34;Answer: %d\\n\u0026#34;, a); // 输出 return 0; } 数据类型 格式说明符 说明 int %d 或 %i 以十进制整数形式输出 unsigned int %u 以无符号十进制整数输出 short %hd 以短整型整数输出 unsigned short %hu 以无符号短整型整数输出 long %ld 以长整型整数输出 unsigned long %lu 以无符号长整型整数输出 long long %lld 以长长整型整数输出 unsigned long long %llu 以无符号长长整型整数输出 float %f 以浮点数格式输出（默认6位小数） double %lf 以双精度浮点数格式输出 long double %Lf 以长双精度浮点数格式输出 2. 特殊输入方法 2.1 getline 读取整行输入 1 2 3 4 5 6 7 8 9 #include \u0026lt;iostream\u0026gt; #include \u0026lt;string\u0026gt; int main() { string line; getline(cin, line); // 包含所有字符（除换行符） cout \u0026lt;\u0026lt; \u0026#34;Input: \u0026#34; \u0026lt;\u0026lt; line \u0026lt;\u0026lt; endl; return 0; } 处理多行输入 1 2 3 4 5 6 7 8 9 10 11 #include \u0026lt;iostream\u0026gt; #include \u0026lt;string\u0026gt; #include \u0026lt;vector\u0026gt; int main() { vector\u0026lt;string\u0026gt; lines; string line; while (getline(cin, line)) { lines.push_back(line); // 读取直到EOF } } 特定终止符 1 2 3 4 5 6 7 8 #include \u0026lt;iostream\u0026gt; #include \u0026lt;string\u0026gt; int main() { string line; getline(cin, line, \u0026#39;\\a\u0026#39;); getline(cin, line, \u0026#39;\\t\u0026#39;); } 处理前导/后导空格 1 2 3 4 5 #include \u0026lt;iostream\u0026gt; #include \u0026lt;string\u0026gt; line.erase(0, line.find_first_not_of(\u0026#34; \\t\\n\u0026#34;)); // 去除行首空格 line.erase(line.find_last_not_of(\u0026#34; \\t\\n\u0026#34;) + 1); // 去除行尾空格 2.2 stringstream 字符串分割到vector 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include \u0026lt;sstream\u0026gt; #include \u0026lt;vector\u0026gt; int main() { string s = \u0026#34;apple banana orange\u0026#34;; stringstream ss(s); vector\u0026lt;string\u0026gt; tokens; string token; while (ss \u0026gt;\u0026gt; token) { // 自动按空格分割 tokens.push_back(token); } // tokens: [\u0026#34;apple\u0026#34;, \u0026#34;banana\u0026#34;, \u0026#34;orange\u0026#34;] return 0; } 自定义分隔符（如逗号） 1 2 3 4 5 6 7 8 9 string csv = \u0026#34;id=100,name=John,age=30\u0026#34;; stringstream ss(csv); vector\u0026lt;string\u0026gt; fields; string field; while (getline(ss, field, \u0026#39;,\u0026#39;)) { // 以逗号分隔 fields.push_back(field); } // fields: [\u0026#34;id=100\u0026#34;, \u0026#34;name=John\u0026#34;, \u0026#34;age=30\u0026#34;] ","date":"2025-04-13T00:00:00Z","image":"https://zouzhenshan.github.io/p/acm_io_cpp/ACM_IO_CPP_huf2d1a32235e2c5a88611ab175bc9ce3a_165613_120x120_fill_box_smart1_3.png","permalink":"https://zouzhenshan.github.io/p/acm_io_cpp/","title":"ACM模式常用输入输出写法（C++）"}]